az network public-ip create -n agic-pip -g k8s --allocation-method Static --sku Standard
az network vnet create -n agic-vnet -g k8s --address-prefix 11.0.0.0/8 --subnet-name agic-subnet --subnet-prefix 11.1.0.0/16 
az network application-gateway create -n agic -l francecentral -g k8s --sku Standard_v2 --public-ip-address agic-pip --vnet-name agic-vnet --subnet agic-subnet

$appgwId=$(az network application-gateway show -n agic -g k8s -o tsv --query "id")
az aks enable-addons -n aks -g k8s -a ingress-appgw --appgw-id $appgwId

$nodeResourceGroup=$(az aks show -n aks -g k8s -o tsv --query "nodeResourceGroup")
$aksVnetName=$(az network vnet list -g MC_k8s_aks_francecentral -o tsv --query "[0].name")

$aksVnetId=$(az network vnet show -n $($aksVnetName) -g $($nodeResourceGroup) -o tsv --query "id")
az network vnet peering create -n AppGWtoAKSVnetPeering -g k8s --vnet-name myVnet --remote-vnet $aksVnetId --allow-vnet-access

$appGWVnetId=$(az network vnet show -n myVnet -g k8s -o tsv --query "id")
az network vnet peering create -n AKStoAppGWVnetPeering -g $nodeResourceGroup --vnet-name $aksVnetName --remote-vnet $appGWVnetId --allow-vnet-access


kubectl delete -f https://raw.githubusercontent.com/Azure/application-gateway-kubernetes-ingress/master/docs/examples/aspnetapp.yaml

https://azure.github.io/application-gateway-kubernetes-ingress/how-tos/lets-encrypt/

helm install cert-manager --namespace cert-manager --version v0.13.0 jetstack/cert-manager